// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id      Int     @id @default(autoincrement())
  name    String  @unique
  login42 String  @unique
  avatar  String
  bio     String? @db.VarChar(140)

  elo    Int @default(1500)
  wins   Int @default(0)
  losses Int @default(0)

  statusId Int    @default(0)
  status   Status @relation(fields: [statusId], references: [id])

  friends1 Friend[] @relation("Friends")
  friends2 Friend[] @relation("FriendsOf")

  ownedRooms  Chatroom[]     @relation("Owner")
  joinedRooms ChatroomUser[] @relation("Member")

  messages Message[]
}

model Status {
  id   Int    @id @default(autoincrement())
  name String @unique
  User User[]
}

model Friend {
  user1Id Int
  user2Id Int

  user1 User @relation("Friends", fields: [user1Id], references: [id])
  user2 User @relation("FriendsOf", fields: [user2Id], references: [id])

  status String

  @@id([user1Id, user2Id])
}

model Chatroom {
  id Int @id @default(autoincrement())

  ownerId Int
  owner   User @relation("Owner", fields: [ownerId], references: [id])

  chatroomUsers ChatroomUser[]
  messages      Message[]
}

model ChatroomUser {
  chatroomId Int
  userId     Int

  chatroom Chatroom @relation(fields: [chatroomId], references: [id])
  user     User     @relation("Member", fields: [userId], references: [id])

  roleId Int
  role   ChatroomRole @relation(fields: [roleId], references: [id])

  @@id([chatroomId, userId])
}

model ChatroomRole {
  id   Int    @id @default(autoincrement())
  name String @unique

  chatroomUsers ChatroomUser[]
}

model Message {
  id   Int    @id @default(autoincrement())
  text String

  userId Int
  user   User @relation(fields: [userId], references: [id])

  chatroomId Int
  chatroom   Chatroom @relation(fields: [chatroomId], references: [id])

  sentAt DateTime @default(now())
}
